# Generated by Django 5.2 on 2025-04-15 20:28

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models
import json
import os
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent.parent

def create_initial_plugins(apps, schema_editor):
    Plugin = apps.get_model('core', 'Plugin')
    
    # Add IMAP Plugin
    Plugin.objects.create(
        name='imap_plugin',
        friendly_name='IMAP Email',
        version='1.0.0',
        enabled=True
    )
    
    # Add SMTP Plugin
    Plugin.objects.create(
        name='smtp_plugin',
        friendly_name='SMTP Email',
        version='1.0.0',
        enabled=True
    )

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('friendly_name', models.CharField(max_length=100)),
                ('version', models.CharField(max_length=20)),
                ('enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RainGullStandardMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raingull_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('processing_status', models.CharField(choices=[('new', 'New'), ('queued', 'Queued'), ('sending', 'Sending'), ('distributed', 'Distributed'), ('failed', 'Failed')], default='new', max_length=20)),
                ('origin_service_id', models.CharField(max_length=100)),
                ('message_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('telegram', 'Telegram'), ('discord', 'Discord'), ('signal', 'Signal'), ('whatsapp', 'WhatsApp'), ('slack', 'Slack'), ('teams', 'Teams'), ('other', 'Other')], default='other', max_length=20)),
                ('sent_timestamp', models.DateTimeField(blank=True, null=True)),
                ('received_timestamp', models.DateTimeField(auto_now_add=True)),
                ('processed_timestamp', models.DateTimeField(auto_now_add=True)),
                ('original_sender', models.CharField(max_length=255)),
                ('original_sender_name', models.CharField(blank=True, max_length=255, null=True)),
                ('original_recipient_list', models.JSONField(blank=True, null=True)),
                ('member_display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('subject', models.CharField(blank=True, max_length=255, null=True)),
                ('snippet', models.CharField(blank=True, max_length=255, null=True)),
                ('message_body', models.TextField()),
                ('additional_headers', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rg_standard_messages',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(default='queued', max_length=50)),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.user')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('incoming_enabled', models.BooleanField(default=True)),
                ('outgoing_enabled', models.BooleanField(default=True)),
                ('config', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plugin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.plugin')),
            ],
        ),
        migrations.CreateModel(
            name='PluginInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_config', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('service_instance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plugin_instance', to='core.serviceinstance')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_contact_method', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='auth.user')),
            ],
        ),
        migrations.RunPython(create_initial_plugins),
    ]
