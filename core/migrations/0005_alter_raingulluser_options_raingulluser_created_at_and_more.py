# Generated by Django 5.2 on 2025-04-20 03:57

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0004_raingulluser_is_staff'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='raingulluser',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now, help_text='When the account was created'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='full_name',
            field=models.CharField(blank=True, help_text="User's full name", max_length=255),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='last_login_ip',
            field=models.GenericIPAddressField(blank=True, help_text='IP address of last login', null=True),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='mfa_enabled',
            field=models.BooleanField(default=False, help_text='Whether MFA is enabled for this user'),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='mfa_secret',
            field=models.CharField(blank=True, help_text='MFA secret key', max_length=32),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='role',
            field=models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', help_text="User's role in the system", max_length=20),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('deactivated', 'Deactivated'), ('banned', 'Banned')], default='active', help_text='Account status', max_length=20),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='timezone',
            field=models.CharField(default='UTC', help_text="User's preferred timezone", max_length=50),
        ),
        migrations.AddField(
            model_name='raingulluser',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, help_text='When the account was last updated'),
        ),
        migrations.AlterField(
            model_name='raingulluser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='raingulluser',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AlterField(
            model_name='raingulluser',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AlterField(
            model_name='raingulluser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
